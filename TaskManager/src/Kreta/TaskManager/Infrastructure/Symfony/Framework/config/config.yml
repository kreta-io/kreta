# This file is part of the Kreta package.
#
# (c) Beñat Espiña <benatespina@gmail.com>
# (c) Gorka Laucirica <gorka.lauzirika@gmail.com>
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

imports:
    - { resource: ../../../../../../../parameters.yml }
    - { resource: security.yml }
    - { resource: services/, type: directory }

parameters:
    task_manager_locale: en

framework:
    secret: "%task_manager_secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: false }
    templating:
        engines: ['twig']
    default_locale: "%task_manager_locale%"
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        handler_id: session.handler.native_file
        name: kretasession
        save_path: "%kernel.root_dir%/../../../../../../var/sessions/%kernel.environment%"
    fragments: ~
    http_method_override: true
    assets: ~

twig:
    debug: "%kernel.debug%"
    strict_variables: "%kernel.debug%"

doctrine:
    dbal:
        driver: pdo_mysql
        host: "%task_manager_database_host%"
        port: "%task_manager_database_port%"
        dbname: "%task_manager_database_name%"
        user: "%task_manager_database_user%"
        password: "%task_manager_database_password%"
        charset: UTF8
        types:
            organization_id:
                class: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\DBAL\Organization\Types\OrganizationIdType
            organization_member_id:
                class: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\DBAL\Organization\Types\OrganizationMemberIdType
            owner_id:
                class: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\DBAL\Organization\Types\OwnerIdType
            project_id:
                class: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\DBAL\Project\Types\ProjectIdType
            task_id:
                class: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\DBAL\Project\Task\Types\TaskIdType
            user_id:
                class: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\DBAL\User\Types\UserIdType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            SharedKernelIdentity:
                mapping: true
                type: xml
                is_bundle: false
                dir: "%kernel.root_dir%/../../../../../../../SharedKernel/src/Kreta/SharedKernel/Infrastructure/Persistence/Doctrine/ORM/Identity/SymfonyMapping/"
                prefix: 'Kreta\SharedKernel\Domain\Model\Identity'
            TaskManagerOrganization:
                mapping: true
                type: xml
                is_bundle: false
                dir: "%kernel.root_dir%/../../Persistence/Doctrine/ORM/Organization/SymfonyMapping/"
                prefix: 'Kreta\TaskManager\Domain\Model\Organization'
            TaskManagerProject:
                mapping: true
                type: xml
                is_bundle: false
                dir: "%kernel.root_dir%/../../Persistence/Doctrine/ORM/Project/SymfonyMapping/"
                prefix: 'Kreta\TaskManager\Domain\Model\Project'
            TaskManagerTask:
                mapping: true
                type: xml
                is_bundle: false
                dir: "%kernel.root_dir%/../../Persistence/Doctrine/ORM/Project/Task/SymfonyMapping/"
                prefix: 'Kreta\TaskManager\Domain\Model\Project\Task'
            TaskManagerUser:
                mapping: true
                type: xml
                is_bundle: false
                dir: "%kernel.root_dir%/../../Persistence/Doctrine/ORM/User/SymfonyMapping/"
                prefix: 'Kreta\TaskManager\Domain\Model\User'

doctrine_migrations:
    dir_name: "%kernel.root_dir%/../../Persistence/Doctrine/Migrations"
    namespace: Kreta\TaskManager\Infrastructure\Persistence\Doctrine\Migrations
    table_name: migration_versions
    name: Kreta Task Manager Migrations

swiftmailer:
    transport: "%task_manager_mailer_transport%"
    host: "%task_manager_mailer_host%"
    username: "%task_manager_mailer_user%"
    password: "%task_manager_mailer_password%"
    spool: { type: memory }

nelmio_cors:
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: [Content-Type, Origin, X-Custom-Auth, x-requested-with, x-requested-by, Authorization]
            allow_methods: [GET, POST, PUT, DELETE, OPTIONS]
            max_age: 3600

overblog_graphql:
    definitions:
        internal_error_message: "An error occurred, please retry later or contact us!"
        config_validation: "%kernel.debug%"
        schema:
            query: Query
            mutation: Mutation
        exceptions:
            errors:
                - "Kreta\\TaskManager\\Domain\\Model\\Organization\\OrganizationNameEmptyException"

old_sound_rabbit_mq:
    connections:
        default:
            host: "%task_manager_rabbitmq_host%"
            port: "%task_manager_rabbitmq_port%"
            user: "%task_manager_rabbitmq_user%"
            password: "%task_manager_rabbitmq_password%"
            vhost: '/'
            lazy: true
            connection_timeout: 3
            read_write_timeout: 3
            keepalive: false
            heartbeat: 0
    consumers:
        asynchronous_events:
            connection: default
            exchange_options:
                name: asynchronous_events
                type: direct
            queue_options:
                name: asynchronous_events
            callback: kreta.task_manager.rabbit_mq_bundle.user_registered

httplug:
    plugins:
        logger: ~
    classes:
        client: Http\Adapter\Guzzle6\Client
        message_factory: Http\Message\MessageFactory\GuzzleMessageFactory
        uri_factory: Http\Message\UriFactory\GuzzleUriFactory
        stream_factory: Http\Message\StreamFactory\GuzzleStreamFactory
    clients:
        guzzle6:
            factory: "httplug.factory.guzzle6"
            plugins:
                - "httplug.plugin.logger"
            config:
                verify: false
                timeout: 2
